---
interface Props {
  url: string
  title: string
  category: string[]
}

const { url, title, category } = Astro.props

const response = await fetch(`https://www.tiktok.com/oembed?url=${url}`)
const data = await response.json()
---

<article
  class="bg-white border border-gray-100 rounded-2xl shadow-lg p-6 w-full max-w-[400px] mx-auto mb-4 transition-shadow hover:shadow-xl"
>
  <h6 class="text-xl font-semibold mb-4 text-gray-900 leading-snug">
    {title}
  </h6>
  <a
    href={url}
    target="_blank"
    rel="noopener noreferrer"
    class="flex items-center gap-2 text-[#4be2b6] font-medium text-lg hover:text-[#2fc89a] transition-colors mb-3"
  >
    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" viewBox="0 0 24 24" fill="currentColor">
      <path d="M19.59 6.69a4.83 4.83 0 0 1-3.77-4.25V2h-3.45v13.67a2.89 2.89 0 0 1-5.2 1.74 2.89 2.89 0 0 1 2.31-4.64 2.93 2.93 0 0 1 .88.13V9.4a6.84 6.84 0 0 0-1-.05A6.33 6.33 0 0 0 5 20.1a6.34 6.34 0 0 0 10.86-4.43v-7a8.16 8.16 0 0 0 4.77 1.52v-3.4a4.85 4.85 0 0 1-1-.1z"/>
    </svg>
    Ver en TikTok
  </a>
  {category.length > 0 && (
    <div class="flex flex-wrap gap-2 mt-2">
      {category.map((cat) => (
        <span class="text-xs bg-gray-100 text-gray-600 px-3 py-1 rounded-full font-medium">
          {cat}
        </span>
      ))}
    </div>
  )}
</article>
