---
import MainLayout from '../layouts/MainLayout.astro'
import RewardCode from '../components/RewardCode.astro'
import Toast from '../components/Toast.astro'

const rewardCodes = [
  {
    name: 'Tyba',
    code: 'SEB355280',
    description: 'Obtienes 2,000 Tybs al invertir por primera vez.',
    isActive: true,
    validFor: 'Válido para nuevos usuarios'
  },
  {
    name: 'Hapi',
    code: 'SEBPAT12',
    description:
      'Después de fondear al menos 10 dólares, recibirás criptomonedas.',
    isActive: true,
    link: 'https://app.hapi.trade/rewards?code=SEBPAT12',
    validFor: 'Válido para nuevos usuarios'
  },
  {
    name: 'Trii',
    code: 'iNzd',
    description:
      'Me ayudas usando mi código de invitación.',
    isActive: true,
    link: 'https://triiapp.page.link/iNzd',
    validFor: 'Válido para nuevos usuarios'
  }
]
---

<MainLayout title='Recompensas' description='Obtén recompensas exclusivas al usar mis códigos de invitación en plataformas de inversión.'>
  <main class='container mx-auto px-4 sm:px-6 lg:px-8 py-8'>
    <div class='max-w-7xl mx-auto custom-green-shadow'>
      <div class='bg-white rounded-lg shadow-lg p-4 sm:p-6 mb-8'>
        <h1 class='text-3xl sm:text-4xl font-bold text-center mb-6 sm:mb-8'>
          Recompensas
        </h1>

        <h2 class='text-xl sm:text-2xl font-semibold mb-3 sm:mb-4'>
          ¿Cómo funciona?
        </h2>
        <p class='text-gray-600 text-sm sm:text-base mb-4'>
          Al registrarte usando cualquiera de mis códigos de recompensas,
          obtendrás beneficios exclusivos y recompensas especiales.
        </p>
      </div>

      <div class="mb-6 max-w-xs mx-auto">
        <input
          id="search-input"
          type="text"
          placeholder="Buscar por plataforma..."
          class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-[#20ecaa]"
        />
      </div>

      <div
        id="reward-grid"
        class='grid gap-4 sm:gap-6 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3'
      >
        {
          rewardCodes.map((reward) => (
            <RewardCode
              name={reward.name}
              code={reward.code}
              description={reward.description}
              isActive={reward.isActive}
              validFor={reward.validFor}
              link={reward.link}
            />
          ))
        }
      </div>
    </div>
  </main>
  <Toast
    message='¡Código copiado!'
    type='success'
  />
</MainLayout>

<script>
  function initializeSearch() {
    const searchInput = document.getElementById('search-input') as HTMLInputElement | null;
    const grid = document.getElementById('reward-grid');
    const cards = grid ? Array.from(grid.children) : [];

    if (searchInput && grid) {
      searchInput.addEventListener('input', (e) => {
        try {
          const value = (e.target as HTMLInputElement).value.toLowerCase().trim();
          
          cards.forEach(card => {
            if (!(card instanceof HTMLElement)) return;
            
            // Buscar en todos los elementos de texto relevantes dentro de la tarjeta
            const cardText = card.textContent?.toLowerCase() || '';
            const isVisible = value === '' || cardText.includes(value);
            
            // Aplicar la visibilidad con una transición suave
            card.style.opacity = isVisible ? '1' : '0';
            card.style.display = isVisible ? '' : 'none';
          });
        } catch (error) {
          console.error('Error al buscar recompensas:', error);
          // En caso de error, mostrar todas las tarjetas
          cards.forEach(card => {
            if (card instanceof HTMLElement) {
              card.style.opacity = '1';
              card.style.display = '';
            }
          });
        }
      });
    }
  }

  // Función para asegurar que la inicialización se realice
  function setupSearch() {
    // Intentar inicializar inmediatamente
    initializeSearch();

    // También inicializar cuando el DOM esté listo
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', initializeSearch);
    }

    // Inicializar después de la navegación de Astro
    document.addEventListener('astro:after-swap', initializeSearch);
    document.addEventListener('astro:page-load', initializeSearch);
  }

  // Iniciar la configuración
  setupSearch();
</script>
